{"version":3,"sources":["../src/s3.js"],"names":["S3","app","response","file","s3","options","Bucket","Key","get","getObject","createReadStream","filename","attachment","fileObject","pipe","Expires","url","getSignedUrl"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;IACqBA,E;AAEjB,gBAAYC,GAAZ,EAAiBC,QAAjB,EAA0B;AAAA;;AACtB,aAAKD,GAAL,GAAWA,GAAX;AACA,aAAKC,QAAL,GAAgBA,QAAhB;AAEH;;;;kCAESC,I,EAAK;AACX,gBAAMC,KAAK,KAAKH,GAAL,CAASG,EAApB;;AAEA,gBAAMC,UAAU;AACZC,wCADY;AAEZC,qBAAK,iBAAEC,GAAF,CAAML,IAAN,EAAY,MAAZ;AAFO,aAAhB;;AAKD,mBAAOC,GAAGK,SAAH,CAAaJ,OAAb,EAAsBK,gBAAtB,EAAP;AAEF;;;iCACQP,I,EAAK;;AAEV,gBAAMC,KAAK,KAAKH,GAAL,CAASG,EAApB;AACA,gBAAMF,WAAW,KAAKA,QAAtB;;AAEA;;AAEA,gBAAMS,WAAW,iBAAEH,GAAF,CAAML,IAAN,EAAY,cAAZ,CAAjB;AACAD,qBAASU,UAAT,CAAoBD,QAApB;;AAEA,gBAAMN,UAAU;AACZC,wCADY;AAEZC,qBAAK,iBAAEC,GAAF,CAAML,IAAN,EAAY,MAAZ;AAFO,aAAhB;AAIA,gBAAMU,aAAaT,GAAGK,SAAH,CAAaJ,OAAb,EAAsBK,gBAAtB,EAAnB;;AAEAG,uBAAWC,IAAX,CAAgBZ,QAAhB;AAIH;;;uCAEcC,I,EAAK;;AAEhB,gBAAMC,KAAK,KAAKH,GAAL,CAASG,EAApB;AACA,gBAAMC,UAAU;AACZC,wCADY;AAEZC,qBAAK,iBAAEC,GAAF,CAAML,IAAN,EAAY,MAAZ,CAFO;AAGZY,yBAAS,IAHG,CAGG;AAHH,aAAhB;;AAOA,gBAAMC,MAAMZ,GAAGa,YAAH,CAAgB,WAAhB,EAA6BZ,OAA7B,CAAZ;;AAEA,mBAAOW,GAAP;AAEH;;;;;;kBAvDgBhB,E","file":"s3.js","sourcesContent":["import _ from 'lodash'\nimport {s3Bucket} from './config'\nexport default class S3{\n\n    constructor(app, response){\n        this.app = app;\n        this.response = response;\n\n    }\n\n    getObject(file){\n        const s3 = this.app.s3;\n\n        const options  ={\n            Bucket: s3Bucket,\n            Key: _.get(file, 'name')\n        };\n\n       return s3.getObject(options).createReadStream();\n\n    }\n    download(file){\n\n        const s3 = this.app.s3;\n        const response = this.response;\n\n        // get Object from S3 service\n\n        const filename = _.get(file, 'originalName');\n        response.attachment(filename);\n\n        const options  ={\n            Bucket: s3Bucket,\n            Key: _.get(file, 'name')\n        };\n        const fileObject = s3.getObject(options).createReadStream();\n\n        fileObject.pipe(response);\n\n\n\n    }\n\n    getDownloadUrl(file){\n\n        const s3 = this.app.s3;\n        const options  ={\n            Bucket: s3Bucket,\n            Key: _.get(file, 'name'),\n            Expires: 3600, // one hour expires.\n        };\n\n\n        const url = s3.getSignedUrl('getObject', options);\n\n        return url;\n\n    }\n\n\n\n}"]}