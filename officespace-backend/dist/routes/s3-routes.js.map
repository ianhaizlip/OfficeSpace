{"version":3,"sources":["../../src/routes/s3-routes.js"],"names":["AWS","require","s3","S3","module","exports","file","get","req","res","listObjects","bucket","params","err","data","status","json","getObject","body","post","putObject","delete","deleteObject","createBucket","deleteBucket"],"mappings":"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","file":"s3-routes.js","sourcesContent":["// const User = require('../models/s3');\r\nconst AWS = require('aws-sdk');\r\nconst s3 = new AWS.S3();\r\n\r\nmodule.exports = (file) => {\r\n    // FILE MANIPULATION\r\n    file.get('/s3/files/:bucket', (req, res) => {\r\n        // GET ALL FILES FROM BUCKET\r\n        // req.body = {\r\n        //     Bucket: \"examplebucket\"\r\n        // };\r\n        s3.listObjects({bucket: req.params.bucket}, (err, data)=>{\r\n            if(err){\r\n                res.status(500).json(err);\r\n            }\r\n\r\n            else{\r\n                res.status(201).json(data);\r\n            }\r\n        });\r\n    });\r\n    file.get('/s3/file/:key', (req, res) => {\r\n        // GET ONE FILE\r\n        // req.body = {\r\n        //     Bucket: \"examplebucket\",\r\n        //     Key: \"objectkey.jpg\"\r\n        // };\r\n        s3.getObject(req.body, (err, data)=>{\r\n            if(err){\r\n                res.status(500).json(err);\r\n            }\r\n\r\n            else{\r\n                res.status(201).json(data);\r\n            }\r\n        })\r\n    });\r\n    file.post('/s3/file', (req, res) => {\r\n        // UPLOAD ONE FILE\r\n        // req.body = {\r\n        //         Body: <Binary String>,\r\n        //         Bucket: \"examplebucket\",\r\n        //         Key: \"exampleobject\",\r\n        //         Metadata: {\r\n        //             \"metadata1\": \"value1\",\r\n        //             \"metadata2\": \"value2\"\r\n        //     }\r\n        // };\r\n        s3.putObject(req.body, (err, data)=>{\r\n            if(err){\r\n                res.status(500).json(err);\r\n            }\r\n\r\n            else{\r\n                res.status(201).json(data);\r\n            }\r\n        });\r\n    });\r\n\r\n    file.delete('/s3/file', (req, res) => {\r\n        // DELETE ONE FILE\r\n        // req.body = {\r\n        //   Bucket: \"examplebucket\",\r\n        //   Key: \"objectkey.jpg\"\r\n        //  };\r\n        s3.deleteObject(req.body, (err, data) =>{\r\n            if(err){\r\n                res.status(500).json(err);\r\n            }\r\n\r\n            else{\r\n                res.status(201).json(data);\r\n            }\r\n        });\r\n    });\r\n\r\n    // BUCKET MANIPULATION\r\n    file.post('/s3/bucket', (req, res) => {\r\n        // CREATE BUCKET\r\n        // req.body = {\r\n        //     Bucket: \"examplebucket\",\r\n        //     ACL: public-read-write,\r\n        //     CreateBucketConfiguration: {\r\n        //         LocationConstraint: \"eu-west-1\"\r\n        //     }\r\n        s3.createBucket(req.body, (err, data) =>{\r\n            if(err){\r\n                res.status(500).json(err);\r\n            }\r\n\r\n            else{\r\n                res.status(201).json(data);\r\n            }\r\n        });\r\n    });\r\n    file.delete('/s3/bucket', (req, res) => {\r\n        // delete bucket\r\n        // req.body = {\r\n        //     Bucket: \"examplebucket\",\r\n        // };\r\n        s3.deleteBucket(req.body, (err, data) =>{\r\n            if(err){\r\n                res.status(500).json(err);\r\n            }\r\n\r\n            else{\r\n                res.status(201).json(data);\r\n            }\r\n        });\r\n    });\r\n};"]}